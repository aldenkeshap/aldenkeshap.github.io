const data = [7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 6, 6, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 4, 4, 5, 5, 5, 4, 4, 2, 2, 7, 7, 5, 5, 7, 7, 5, 5, 3, 3, 4, 4, 6, 6, 6, 8, 8, 7, 7, 8, 8, 8, 6, 6, 5, 5, 5, 3, 3, 3, 3, 5, 5, 3, 2, 2, 3, 3, 3, 2, 2, 4, 4, 5, 5, 5, 4, 4, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 5, 5, 4, 4, 4, 6, 6, 8, 8, 7, 7, 8, 8, 8, 6, 6, 6, 6, 5, 5, 5, 3, 3, 5, 5, 3, 2, 2, 1, 1, 2, 2, 3, 3, 3, 5, 4, 4, 4, 2, 2, 2, 7, 7, 5, 5, 5, 7, 7, 7, 5, 5, 4, 4, 4, 6, 6, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 2, 2, 1, 1, 2, 2, 3, 3, 3, 5, 4, 4, 2, 2, 2, 2, 7, 7, 5, 5, 5, 7, 7, 7, 5, 6, 6, 4, 4, 6, 6, 7, 7, 7, 6, 6, 4, 4, 4, 4, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 4, 4, 2, 2, 0, 0, 7, 7, 5, 5, 5, 5, 5, 5, 5, 6, 6, 4, 4, 5, 5, 7, 7, 6, 6, 6, 4, 4, 4, 4, 5, 5, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 5, 5, 5, 5, 4, 4, 2, 2, 0, 0, 6, 6, 5, 3, 3, 5, 5, 7, 7, 5, 5, 3, 3, 5, 5, 5, 7, 6, 6, 5, 5, 5, 3, 3, 5, 5, 4, 4, 4, 5, 7, 7, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 6, 6, 4, 4, 2, 2, 0, 0, 6, 6, 5, 3, 3, 5, 5, 7, 7, 5, 5, 3, 3, 3, 3, 5, 7, 7, 7, 5, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 6, 6, 4, 4, 3, 3, 1, 1, 5, 5, 5, 5, 5, 6, 6, 7, 7, 5, 5, 3, 3, 3, 3, 5, 5, 7, 7, 5, 5, 5, 5, 5, 7, 7, 5, 5, 5, 5, 5, 5, 5, 7, 7, 6, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 1, 1, 5, 5, 5, 5, 5, 6, 6, 6, 6, 4, 4, 2, 2, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 5, 5, 5, 5, 3, 3, 5, 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 3, 1, 1, 1, 5, 5, 7, 7, 5, 5, 5, 6, 6, 4, 4, 2, 2, 3, 5, 5, 7, 7, 7, 5, 5, 7, 7, 5, 5, 5, 5, 5, 5, 5, 3, 3, 5, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 3, 3, 1, 1, 1, 5, 7, 7, 7, 7, 5, 5, 6, 6, 4, 3, 3, 3, 3, 5, 7, 7, 7, 7, 7, 7, 7, 7, 5, 5, 5, 3, 3, 3, 3, 3, 5, 5, 7, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 3, 3, 3, 1, 1, 5, 7, 7, 7, 7, 7, 7, 6, 4, 4, 3, 3, 3, 5, 5, 7, 7, 7, 8, 8, 8, 6, 6, 5, 5, 5, 3, 3, 3, 3, 5, 5, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 3, 3, 3, 1, 1, 5, 5, 7, 7, 7, 7, 7, 6, 4, 2, 2, 4, 4, 5, 5, 5, 7, 7, 8, 8, 8, 6, 6, 5, 3, 3, 2, 2, 3, 3, 5, 5, 7, 7, 6, 8, 8, 6, 6, 6, 6, 6, 6, 6, 5, 3, 5, 5, 3, 3, 5, 5, 7, 7, 7, 7, 7, 6, 4, 2, 2, 4, 4, 5, 5, 5, 6, 6, 6, 8, 6, 6, 6, 5, 3, 3, 2, 2, 3, 5, 5, 7, 7, 6, 6, 8, 8, 6, 6, 6, 6, 5, 5, 5, 5, 3, 5, 5, 3, 3, 6, 6, 7, 9, 9, 7, 7, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 8, 6, 6, 6, 5, 5, 3, 3, 3, 3, 5, 7, 7, 7, 6, 6, 8, 6, 6, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 6, 6, 7, 9, 9, 7, 6, 6, 4, 4, 6, 6, 6, 5, 5, 6, 6, 8, 8, 8, 8, 7, 7, 7, 5, 3, 3, 3, 5, 5, 7, 7, 7, 6, 6, 8, 6, 6, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 7, 7, 7, 7, 6, 6, 4, 4, 6, 6, 6, 5, 5, 5, 6, 8, 8, 8, 8, 7, 7, 7, 5, 3, 3, 5, 5, 5, 7, 5, 5, 6, 6, 8, 6, 6, 5, 5, 3, 3, 2, 2, 4, 4, 4, 2, 2, 2, 5, 5, 7, 7, 7, 7, 5, 5, 4, 5, 5, 7, 7, 7, 7, 5, 6, 6, 7, 7, 8, 8, 7, 7, 5, 5, 5, 5, 5, 5, 7, 5, 5, 7, 7, 8, 8, 6, 4, 4, 3, 3, 2, 2, 4, 4, 4, 2, 2, 2, 5, 5, 5, 7, 7, 5, 5, 5, 4, 5, 5, 7, 7, 7, 7, 5, 5, 6, 7, 7, 8, 8, 7, 7, 5, 5, 7, 7, 6, 6, 7, 7, 7, 7, 7, 8, 8, 6, 4, 4, 4, 4, 2, 2, 4, 4, 4, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 4, 4, 5, 5, 7, 7, 7, 7, 5, 5, 6, 6, 7, 7, 7, 7, 7, 6, 6, 7, 7, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 4, 5, 5, 7, 7, 6, 6, 7, 5, 5, 6, 6, 7, 8, 8, 6, 6, 6, 6, 7, 7, 6, 6, 7, 7, 6, 6, 6, 6, 6, 6, 5, 5, 6, 6, 6, 4, 4, 4, 4, 4, 2, 2, 4, 4, 4, 5, 5, 5, 4, 4, 5, 5, 7, 7, 6, 6, 7, 7, 5, 5, 7, 7, 8, 8, 6, 6, 5, 5, 5, 5, 6, 6, 6, 6, 6, 4, 4, 4, 4, 6, 5, 5, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 7, 7, 7, 7, 7, 7, 5, 5, 7, 7, 6, 6, 6, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 4, 4, 4, 4, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 4, 4, 2, 2, 2, 4, 4, 3, 3, 5, 5, 5, 5, 7, 7, 7, 7, 5, 5, 5, 5, 6, 6, 6, 5, 5, 3, 3, 5, 5, 4, 4, 6, 6, 4, 4, 4, 6, 6, 6, 7, 7, 9, 9, 7, 7, 7, 8, 8, 6, 4, 4, 2, 2, 2, 2, 3, 3, 3, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 5, 5, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 6, 8, 8, 7, 7, 9, 9, 7, 7, 7, 8, 8, 6, 6, 6, 2, 2, 2, 2, 3, 3, 3, 5, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 4, 4, 4, 5, 5, 6, 8, 8, 9, 9, 9, 7, 7, 7, 8, 8, 8, 8, 6, 6, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 5, 5, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 5, 5, 6, 6, 8, 9, 9, 7, 7, 8, 8, 8, 6, 6, 8, 8, 6, 3, 3, 5, 5, 5, 3, 3, 5, 5, 5, 5, 5, 5, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 0, 0, 1, 1, 2, 4, 5, 5, 6, 6, 8, 8, 8, 7, 7, 8, 8, 6, 6, 6, 8, 8, 6, 4, 4, 5, 5, 5, 5, 5, 5, 5, 7, 7, 5, 5, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 0, 0, 1, 1, 2, 4, 6, 6, 6, 6, 8, 8, 8, 6, 6, 6, 6, 6, 6, 6, 8, 8, 6, 4, 4, 5, 7, 7, 5, 5, 5, 5, 7, 7, 7, 7, 6, 6, 5, 5, 6, 6, 4, 4, 4, 4, 2, 2, 1, 1, 0, 0, 2, 2, 2, 4, 6, 6, 6, 6, 8, 8, 6, 6, 6, 6, 6, 4, 4, 4, 6, 6, 6, 5, 5, 5, 7, 7, 5, 5, 4, 4, 6, 6, 7, 7, 6, 6, 5, 5, 6, 6, 6, 4, 4, 4, 2, 2, 1, 1, 2, 2, 2, 2, 2, 4, 4, 4, 4, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 4, 6, 6, 6, 5, 7, 7, 7, 7, 5, 5, 4, 4, 6, 6, 7, 7, 6, 5, 5, 6, 6, 6, 6, 6, 6, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 6, 6, 6, 6, 4, 4, 6, 6, 6, 5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 5, 5, 5, 6, 6, 6, 6, 6, 6, 5, 5, 6, 6, 6, 6, 6, 6, 4, 4, 2, 2, 2, 2, 1, 1, 0, 0, 0, 2, 2, 4, 6, 6, 5, 5, 4, 4, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 4, 4, 4, 6, 6, 7, 7, 6, 6, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 0, 2, 4, 4, 6, 6, 5, 5, 4, 4, 6, 6, 6, 6, 6, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 4, 4, 4, 4, 6, 6, 7, 7, 6, 6, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 5, 5, 7, 7, 7, 7, 6, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 4, 4, 6, 4, 4, 6, 6, 8, 8, 6, 6, 5, 5, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 5, 5, 4, 4, 5, 5, 5, 7, 7, 7, 7, 6, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 4, 4, 6, 6, 8, 8, 6, 6, 5, 5, 3, 3, 4, 4, 4, 2, 2, 2, 4, 4, 3, 3, 3, 5, 5, 5, 5, 5, 7, 7, 7, 7, 6, 6, 6, 6, 6, 5, 5, 4, 4, 4, 4, 4, 4, 4, 6, 6, 5, 5, 4, 4, 4, 4, 6, 6, 5, 5, 5, 3, 3, 3, 4, 4, 4, 2, 2, 2, 3, 3, 3, 3, 3, 5, 4, 4, 5, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 4, 4, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 4, 4, 6, 6, 5, 5, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 5, 5, 5, 4, 4, 5, 7, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 6, 6, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 4, 6, 6, 6, 5, 5, 3, 3, 1, 1, 3, 3, 2, 2, 2, 3, 3, 3, 3, 5, 5, 5, 4, 4, 5, 5, 6, 6, 6, 6, 6, 4, 4, 3, 3, 4, 4, 4, 4, 5, 5, 5, 3, 3, 3, 3, 2, 2, 4, 4, 4, 6, 6, 6, 4, 4, 3, 3, 1, 1, 4, 4, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 6, 6, 6, 6, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 4, 4, 4, 6, 6, 4, 4, 4, 2, 2, 0, 0, 4, 4, 2, 2, 2, 3, 3, 2, 2, 3, 2, 2, 3, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 2, 2, 3, 3, 4, 4, 4, 5, 5, 3, 3, 3, 3, 5, 5, 4, 6, 6, 4, 2, 2, 2, 2, 0, 0, 4, 4, 4, 4, 4, 4, 2, 2, 2, 3, 2, 2, 3, 3, 4, 4, 5, 5, 4, 4, 4, 5, 5, 4, 4, 2, 2, 2, 3, 3, 4, 5, 5, 5, 3, 1, 1, 3, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 5, 5, 4, 4, 4, 4, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 3, 3, 2, 2, 3, 4, 5, 5, 5, 3, 1, 1, 3, 3, 3, 5, 5, 4, 2, 2, 2, 4, 4, 2, 2, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 4, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 3, 3, 2, 2, 3, 4, 5, 5, 5, 3, 3, 3, 3, 3, 3, 5, 5, 4, 2, 2, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 4, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 4, 4, 4, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 5, 3, 3, 2, 2, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 1, 1, 2, 2, 2, 4, 4, 3, 3, 3, 4, 4, 6, 6, 5, 5, 4, 4, 4, 5, 5, 4, 3, 3, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 5, 3, 3, 2, 2, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 1, 1, 2, 2, 2, 4, 4, 3, 3, 3, 4, 4, 6, 6, 5, 5, 4, 4, 4, 4, 4, 4, 3, 3, 5, 5, 5, 4, 4, 4, 4];

const scene = new THREE.Scene();
const renderer = new THREE.WebGLRenderer({
    antialias: true,
});
renderer.shadowMap.enabled = true;
renderer.shadowMap.type = THREE.PCFSoftShadowMap;

renderer.setSize(window.innerWidth * 0.75, window.innerHeight * 0.75);
document.body.appendChild(renderer.domElement);
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

const controls = new THREE.OrbitControls(camera, renderer.domElement);

controls.update();

const material = new THREE.MeshLambertMaterial({
    color: 0x00ff00,
});
for (let x = 0; x < 50; x++) {
    for (let z = 0; z < 50; z++) {
        const h = data[z * 50 + x] + 1;
        const geometry = new THREE.BoxGeometry(1, h, 1);
        let cube = new THREE.Mesh(geometry, material);
        cube.castShadow = true;
        cube.receiveShadow = true;
        scene.add(cube);
        cube.position.set(x - 25, h / 2, z - 25);
    }
}

const light = new THREE.PointLight(0xffffff, 1, 0);
light.position.set(0, 50, 0);
light.castShadow = true;
scene.add(light);

light.shadow.mapSize.width = window.innerWidth * 0.75;
light.shadow.mapSize.height = window.innerHeight * 0.75;

const ambient = new THREE.AmbientLight(0xffffff, 0.3);
scene.add(ambient);

camera.position.y = 50;

controls.update();

function animate() {
    requestAnimationFrame( animate );
    renderer.render( scene, camera );
}
animate();
